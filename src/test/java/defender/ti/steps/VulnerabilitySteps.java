package defender.ti.steps;


import defender.ti.api.CliftonApiCall;
import defender.ti.utils.Constants;
import defender.ti.utils.DataGenerator;
import io.restassured.response.Response;
import net.serenitybdd.core.Serenity;
import net.thucydides.core.annotations.Step;

public class VulnerabilitySteps {


    @Step("Get Vulnerability")
    public Response getVulnerability(String name, CliftonApiCall.ApiCallHelper helper) {
        Serenity.recordReportData().withTitle("Vulnerability Record");
        switch (helper) {
            case INVALID_CREDENTIALS:
                return CliftonApiCall.getVulnerability(name , DataGenerator.generateNewToken());
            default:
                return CliftonApiCall.getVulnerability(name, System.getProperty("access-token"));
        }
    }

    @Step("Get Vulnerability Articles")
    public Response getVulnerabilityArticles(String name, Boolean count, Integer top, Integer skip, String select, CliftonApiCall.ApiCallHelper helper) {
        Serenity.recordReportData().withTitle("Vulnerability Articles");
        switch (helper) {
            case INVALID_CREDENTIALS:
                return CliftonApiCall.getVulnerabilityArticles(name, count,top, skip, select, DataGenerator.generateNewToken());
            default:
                return CliftonApiCall.getVulnerabilityArticles(name, count, top, skip, select, System.getProperty("access-token"));
        }
    }

    @Step("Get Vulnerability Components")
    public Response getVulnerabilityComponents(String name, Boolean count, Integer top, Integer skip, CliftonApiCall.ApiCallHelper helper) {
        Serenity.recordReportData().withTitle("Vulnerability Articles");
        switch (helper) {
            case INVALID_CREDENTIALS:
                return CliftonApiCall.getVulnerabilityComponents(name, count,null, top, skip, DataGenerator.generateNewToken());
            default:
                return CliftonApiCall.getVulnerabilityComponents(name, count, null, top, skip, System.getProperty("access-token"));
        }
    }

}
